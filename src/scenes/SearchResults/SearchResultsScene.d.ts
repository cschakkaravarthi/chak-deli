import React, { FC } from 'react';
import Article from '../../shared/models/Article.model';
import EventModel from '../../shared/models/Event.model';
import PeopleModel from '../../shared/models/People.model';
import { Department } from '../../shared/models/Department.model';
import Link from '../../shared/models/Link.model';
import { PageSearch } from '../../shared/models/Page.model';
import { OfficeSearch } from '../../shared/models/Office.model';
import { DocumentSearch } from '../../shared//models/Document.model';
import { KnowledgeSearch } from '../../shared/models/KnowledgeBase.model';
import { CatalogSearch } from '../../shared/models/Catalog.model';
declare type Props = {
    match?: object;
    articles?: Article[];
    events?: EventModel[];
    people?: PeopleModel[];
    departments?: Department[];
    links?: Link[];
    pages?: PageSearch[];
    office?: OfficeSearch[];
    documents?: DocumentSearch[];
    knowledgeBase?: KnowledgeSearch[];
    catalog?: CatalogSearch[];
    articlesCount?: number;
    eventsCount?: number;
    peopleCount?: number;
    departmentsCount?: number;
    linksCount?: number;
    pagesCount?: number;
    officeCount?: number;
    documentsCount?: number;
    knowledgeBaseCount?: number;
    catalogCount?: number;
    totalCount?: number;
    isFetch?: boolean;
    selectedFacet?: string;
    pageCount?: number;
    isLastPage?: boolean;
    setSelectedType?: (type: string) => void;
    fetchSearchResults?: (a?: boolean, b?: number, c?: string, d?: number, e?: string) => void;
    clearSearchScrollList?: () => void;
    fetchAddToContactRequest?: (email: string | undefined) => void;
    spellingSuggestion?: string;
};
export declare const SearchResultsScene: FC<Props>;
declare const _default: import("react-redux").ConnectedComponent<React.FC<Props>, Pick<Props, "match" | "isLastPage" | "selectedFacet" | "departments" | "pages" | "articles" | "events" | "people" | "links" | "office" | "documents" | "knowledgeBase" | "catalog" | "articlesCount" | "eventsCount" | "peopleCount" | "departmentsCount" | "linksCount" | "pagesCount" | "officeCount" | "documentsCount" | "knowledgeBaseCount" | "catalogCount" | "totalCount" | "isFetch" | "pageCount" | "spellingSuggestion">>;
export default _default;
//# sourceMappingURL=SearchResultsScene.d.ts.map